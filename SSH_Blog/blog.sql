/*
Navicat MySQL Data Transfer

Source Server         : localhost_3306
Source Server Version : 50704
Source Host           : localhost:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 50704
File Encoding         : 65001

Date: 2015-11-09 08:03:10
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `article`
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `beagincontent` varchar(255) NOT NULL,
  `releasetime` varchar(30) NOT NULL,
  `filename` varchar(20) DEFAULT NULL,
  `user_id` int(11) NOT NULL DEFAULT '0',
  `articletype_id` int(11) NOT NULL,
  `imagename` varchar(256) NOT NULL,
  `visits` int(10) unsigned zerofill NOT NULL DEFAULT '0000000000',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('27', 'fasdfdsa', 'fasdfasdf', 'fasdfasdf', '2015-11-02 17:01', null, '1', '2', 'default.jpg', '0000000054');
INSERT INTO `article` VALUES ('40', 'JAVA多线程实现的三种方式', '<p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 18px;\">JAVA多线程实现方式主要有三种：继承Thread类、实现Runnable接口、使用ExecutorService、Callable、Future实现有返回结果的多线程。其中前两种方式线程执行完后都没有返回值，只有最后一种是带返回值的。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 18px;\"><br/></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 18px;\">1、继承Thread类实现多线程<br/>继承Thread类的方法尽管被我列为一种多线程实现方式，但Thread本质上也是实现了Runnable接口的一个实例，它代表一个线程的实例，并且，启动线程的唯一方法就是通过Thread类的start()实例方法。start()方法是一个native方法，它将启动一个新线程，并执行run()方法。这种方式实现多线程很简单，通过自己的类直接extend Thread，并复写run()方法，就可以启动新线程并执行自己定义的run()方法。例如：<br/></span></p><p><strong>[java]</strong>&nbsp;<a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">copy</a></p><ol start=\"1\" class=\"dp-j list-paddingleft-2\" style=\"padding: 0px; border: none; color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important; background-color: rgb(255, 255, 255);\"><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">public</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">class</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;MyThread&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">extends</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Thread&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">public</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">void</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;run()&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　&nbsp;System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;MyThread.run()&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">在合适的地方启动线程如下：</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/></p><p><strong>[java]</strong>&nbsp;<a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">copy</a></p><ol start=\"1\" class=\"dp-j list-paddingleft-2\" style=\"padding: 0px; border: none; color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important; background-color: rgb(255, 255, 255);\"><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">MyThread&nbsp;myThread1&nbsp;=&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;MyThread();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">MyThread&nbsp;myThread2&nbsp;=&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;MyThread();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">myThread1.start();&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">myThread2.start();&nbsp;&nbsp;</span></p></li></ol><p><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">2、实现Runnable接口方式实现多线程</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">如果自己的类已经extends另一个类，就无法直接extends Thread，此时，必须实现一个Runnable接口，如下：</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/></p><p><strong>[java]</strong>&nbsp;<a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">copy</a></p><ol start=\"1\" class=\"dp-j list-paddingleft-2\" style=\"padding: 0px; border: none; color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important; background-color: rgb(255, 255, 255);\"><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">public</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">class</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;MyThread&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">extends</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;OtherClass&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">implements</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Runnable&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">public</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">void</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;run()&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　&nbsp;System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;MyThread.run()&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">为了启动MyThread，需要首先实例化一个Thread，并传入自己的MyThread实例：</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/></p><p><strong>[java]</strong>&nbsp;<a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">copy</a></p><ol start=\"1\" class=\"dp-j list-paddingleft-2\" style=\"padding: 0px; border: none; color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important; background-color: rgb(255, 255, 255);\"><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">MyThread&nbsp;myThread&nbsp;=&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;MyThread();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">Thread&nbsp;thread&nbsp;=&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Thread(myThread);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">thread.start();&nbsp;&nbsp;</span></p></li></ol><p><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">事实上，当传入一个Runnable target参数给Thread后，Thread的run()方法就会调用target.run()，参考JDK源代码：</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/></p><p><strong>[java]</strong>&nbsp;<a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">copy</a></p><ol start=\"1\" class=\"dp-j list-paddingleft-2\" style=\"padding: 0px; border: none; color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important; background-color: rgb(255, 255, 255);\"><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">public</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">void</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;run()&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">if</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;(target&nbsp;!=&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">null</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　&nbsp;target.run();&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">　　}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">3、使用ExecutorService、Callable、Future实现有返回结果的多线程</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">ExecutorService、Callable、Future这个对象实际上都是属于Executor框架中的功能类。想要详细了解Executor框架的可以访问http://www.javaeye.com/topic/366591 ，这里面对该框架做了很详细的解释。返回结果的线程是在JDK1.5中引入的新特征，确实很实用，有了这种特征我就不需要再为了得到返回值而大费周折了，而且即便实现了也可能漏洞百出。</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">可返回值的任务必须实现Callable接口，类似的，无返回值的任务必须Runnable接口。执行Callable任务后，可以获取一个Future的对象，在该对象上调用get就可以获取到Callable任务返回的Object了，再结合线程池接口ExecutorService就可以实现传说中有返回结果的多线程了。下面提供了一个完整的有返回结果的多线程测试例子，在JDK1.5下验证过没问题可以直接使用。代码如下：</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 18px;\"></span></p><p><strong>[java]</strong>&nbsp;<a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/aboy123/article/details/38307539#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;\">copy</a></p><ol start=\"1\" class=\"dp-j list-paddingleft-2\" style=\"padding: 0px; border: none; color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important; background-color: rgb(255, 255, 255);\"><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">import</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.util.concurrent.*;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">import</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.util.Date;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">import</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.util.List;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">import</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.util.ArrayList;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">/**</span>&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">*&nbsp;有返回值的线程</span>&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">*/</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@SuppressWarnings</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">(</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;unchecked&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">public</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">class</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Test&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">public</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">static</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">void</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">throws</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;ExecutionException,&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;InterruptedException&nbsp;{&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;----程序开始运行----&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;Date&nbsp;date1&nbsp;=&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Date();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">int</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;taskSize&nbsp;=&nbsp;</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">5</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;创建一个线程池</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;ExecutorService&nbsp;pool&nbsp;=&nbsp;Executors.newFixedThreadPool(taskSize);&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;创建多个有返回值的任务</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;List&lt;Future&gt;&nbsp;list&nbsp;=&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;ArrayList&lt;Future&gt;();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">for</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;(</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">int</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;i&nbsp;=&nbsp;</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">0</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">;&nbsp;i&nbsp;&lt;&nbsp;taskSize;&nbsp;i++)&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;Callable&nbsp;c&nbsp;=&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;MyCallable(i&nbsp;+&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;&nbsp;&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;执行任务并获取Future对象</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;Future&nbsp;f&nbsp;=&nbsp;pool.submit(c);&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;System.out.println(&quot;&gt;&gt;&gt;&quot;&nbsp;+&nbsp;f.get().toString());</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;list.add(f);&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;关闭线程池</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;pool.shutdown();&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;获取所有并发任务的运行结果</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">for</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;(Future&nbsp;f&nbsp;:&nbsp;list)&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;从Future对象上获取任务的返回值，并输出到控制台</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;&gt;&gt;&gt;&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;f.get().toString());&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;Date&nbsp;date2&nbsp;=&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Date();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;----程序结束运行----，程序运行时间【&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;(date2.getTime()&nbsp;-&nbsp;date1.getTime())&nbsp;+&nbsp;<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;毫秒】&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">class</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;MyCallable&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">implements</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Callable&lt;Object&gt;&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">private</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;String&nbsp;taskNum;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">MyCallable(String&nbsp;taskNum)&nbsp;{&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">this</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">.taskNum&nbsp;=&nbsp;taskNum;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">public</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Object&nbsp;call()&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">throws</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Exception&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;&gt;&gt;&gt;&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;taskNum&nbsp;+&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;任务启动&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;Date&nbsp;dateTmp1&nbsp;=&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Date();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;Thread.sleep(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1000</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;Date&nbsp;dateTmp2&nbsp;=&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">new</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Date();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">long</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;time&nbsp;=&nbsp;dateTmp2.getTime()&nbsp;-&nbsp;dateTmp1.getTime();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;&gt;&gt;&gt;&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;taskNum&nbsp;+&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;任务终止&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">return</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;taskNum&nbsp;+&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;任务返回运行结果,当前任务时间【&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;time&nbsp;+&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">&quot;毫秒】&quot;</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">}&nbsp;&nbsp;</span></p></li><li><p><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">代码说明：</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">上述代码中Executors类，提供了一系列工厂方法用于创先线程池，返回的线程池都实现了ExecutorService接口。</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">public static ExecutorService newFixedThreadPool(int nThreads)&nbsp;</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">创建固定数目线程的线程池。</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">public static ExecutorService newCachedThreadPool()&nbsp;</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">创建一个可缓存的线程池，调用execute 将重用以前构造的线程（如果线程可用）。如果现有线程没有可用的，则创建一个新线程并添加到池中。终止并从缓存中移除那些已有 60 秒钟未被使用的线程。</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">public static ExecutorService newSingleThreadExecutor()&nbsp;</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">创建一个单线程化的Executor。</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize)&nbsp;</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">创建一个支持定时及周期性的任务执行的线程池，多数情况下可用来替代Timer类。</span><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">ExecutoreService提供了submit()方法，传递一个Callable，或Runnable，返回Future。如果Executor后台线程池还没有完成Callable的计算，这调用返回Future对象的get()方法，会阻塞直到计算完成。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">转载于：<a target=\"_blank\" href=\"http://www.cnblogs.com/yezhenhan/archive/2012/01/09/2317636.html\" style=\"color: rgb(255, 153, 0); text-decoration: none;\">http://www.cnblogs.com/yezhenhan/archive/2012/01/09/2317636.html</a></p><p><br/></p>', 'JAVA多线程实现方式主要有三种：继承Thread类、实现Runnable接口、使用ExecutorService、Callable、Future实现有返回结果的多线程。其中前两种方式线程执行完后都没', '2015-11-07 10:58', null, '1', '10', 'default.jpg', '0000000018');

-- ----------------------------
-- Table structure for `articletype`
-- ----------------------------
DROP TABLE IF EXISTS `articletype`;
CREATE TABLE `articletype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `value` varchar(20) NOT NULL,
  `pid` int(11) DEFAULT NULL,
  `linkname` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of articletype
-- ----------------------------
INSERT INTO `articletype` VALUES ('1', '移动开发', null, 'mobile-devel');
INSERT INTO `articletype` VALUES ('2', 'appche', '1', 'appche');
INSERT INTO `articletype` VALUES ('3', 'tomcat', '1', 'tomcat');
INSERT INTO `articletype` VALUES ('4', '前端开发', null, 'front-end-development');
INSERT INTO `articletype` VALUES ('5', '编程语言', null, 'programe');
INSERT INTO `articletype` VALUES ('6', '数据库', null, 'gossip');
INSERT INTO `articletype` VALUES ('7', '非技术', null, 'else');
INSERT INTO `articletype` VALUES ('8', 'html css', '4', 'html-css');
INSERT INTO `articletype` VALUES ('9', 'javascript', '4', 'javascript');
INSERT INTO `articletype` VALUES ('10', 'java', '5', 'java');
INSERT INTO `articletype` VALUES ('11', 'c  ', '5', 'c  ');
INSERT INTO `articletype` VALUES ('12', '免费资源', '7', 'freesource');
INSERT INTO `articletype` VALUES ('13', '心情随笔', '7', 'moodgossip');
INSERT INTO `articletype` VALUES ('14', '网文资讯', '7', 'webnews');
INSERT INTO `articletype` VALUES ('15', 'PHP', '5', 'php');
INSERT INTO `articletype` VALUES ('16', 'lala', '1', '测试');
INSERT INTO `articletype` VALUES ('17', '测试', '7', 'test');
INSERT INTO `articletype` VALUES ('18', '栏目啦', '4', '栏目');
INSERT INTO `articletype` VALUES ('19', '互联网', null, 'internet');
INSERT INTO `articletype` VALUES ('20', '操作系统', null, 'os');

-- ----------------------------
-- Table structure for `article_tag`
-- ----------------------------
DROP TABLE IF EXISTS `article_tag`;
CREATE TABLE `article_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) DEFAULT NULL,
  `tag_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `article_id` (`article_id`),
  KEY `tag_id` (`tag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=68 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article_tag
-- ----------------------------
INSERT INTO `article_tag` VALUES ('24', '27', '84');
INSERT INTO `article_tag` VALUES ('25', '27', '85');
INSERT INTO `article_tag` VALUES ('26', '27', '86');
INSERT INTO `article_tag` VALUES ('65', '40', '101');
INSERT INTO `article_tag` VALUES ('66', '40', '100');
INSERT INTO `article_tag` VALUES ('67', '40', '99');

-- ----------------------------
-- Table structure for `comment`
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `reply_id` int(10) unsigned zerofill DEFAULT NULL,
  `content` varchar(255) NOT NULL,
  `time` varchar(30) NOT NULL,
  `article_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `through_flag` int(10) unsigned zerofill NOT NULL,
  `auditing_flag` int(10) unsigned zerofill NOT NULL,
  `parent_id` int(10) unsigned zerofill DEFAULT NULL,
  `light` int(10) unsigned zerofill NOT NULL DEFAULT '0000000000',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comment
-- ----------------------------

-- ----------------------------
-- Table structure for `message`
-- ----------------------------
DROP TABLE IF EXISTS `message`;
CREATE TABLE `message` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `time` varchar(20) DEFAULT NULL,
  `content` varchar(255) DEFAULT NULL,
  `through_flag` int(10) unsigned zerofill NOT NULL DEFAULT '0000000000',
  `auditing_flag` int(10) unsigned zerofill NOT NULL DEFAULT '0000000000',
  `light` int(10) unsigned zerofill NOT NULL DEFAULT '0000000000',
  `user_id` int(11) NOT NULL,
  `reply_id` int(10) unsigned zerofill DEFAULT NULL,
  `parent_id` int(10) unsigned zerofill DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of message
-- ----------------------------

-- ----------------------------
-- Table structure for `tag`
-- ----------------------------
DROP TABLE IF EXISTS `tag`;
CREATE TABLE `tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `value` varchar(256) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Records of tag
-- ----------------------------
INSERT INTO `tag` VALUES ('82', '发的');
INSERT INTO `tag` VALUES ('83', '房顶上');
INSERT INTO `tag` VALUES ('84', 'fsd');
INSERT INTO `tag` VALUES ('85', 'gdsfg');
INSERT INTO `tag` VALUES ('86', 'gd');
INSERT INTO `tag` VALUES ('87', 'apache');
INSERT INTO `tag` VALUES ('88', 'c#');
INSERT INTO `tag` VALUES ('89', 'linux');
INSERT INTO `tag` VALUES ('90', 'mysql');
INSERT INTO `tag` VALUES ('91', 'nginx');
INSERT INTO `tag` VALUES ('92', 'php');
INSERT INTO `tag` VALUES ('93', '电影');
INSERT INTO `tag` VALUES ('94', '音乐');
INSERT INTO `tag` VALUES ('95', '歌词');
INSERT INTO `tag` VALUES ('96', '软件');
INSERT INTO `tag` VALUES ('97', 'c');
INSERT INTO `tag` VALUES ('98', '发生的');
INSERT INTO `tag` VALUES ('99', 'java');
INSERT INTO `tag` VALUES ('100', '多线程');
INSERT INTO `tag` VALUES ('101', '线程池');

-- ----------------------------
-- Table structure for `user`
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(20) NOT NULL,
  `email` varchar(30) NOT NULL,
  `password` varchar(30) NOT NULL,
  `registertime` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('32', 'admin', 'admin@qq.com', '123456', '2015-11-08 19:04');
INSERT INTO `user` VALUES ('33', 'admin', 'admin@qq.com', '123456', '2015-11-08 19:05');
INSERT INTO `user` VALUES ('34', 'root', 'admin@qq.com', '123456', '2015-11-08 19:11');
